# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := linux_package_deb
### Rules for action "deb_package_beta":
quiet_cmd_build_install_gyp_linux_package_deb_target_deb_package_beta = ACTION build_install_gyp_linux_package_deb_target_deb_package_beta $@
cmd_build_install_gyp_linux_package_deb_target_deb_package_beta = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd build; mkdir -p $(builddir); flock -- /tmp/linux_package_lock bash "$(builddir)/install/debian/build.sh" "-o$(builddir)" -b "$(builddir)" -a x64 -c beta

$(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb: obj := $(abs_obj)
$(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb: builddir := $(abs_builddir)
$(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb: TOOLSET := $(TOOLSET)
$(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb: $(builddir)/install/debian/build.sh $(builddir)/libmod_spdy.so install/common/apt.include install/common/mod-spdy.info install/common/installer.include install/common/repo.cron install/common/rpm.include install/common/rpmrepo.cron install/common/updater install/common/variables.include install/common/BRANDING install/common/spdy.load.template install/common/spdy.conf.template install/common/ssl.load.template install/debian/build.sh install/debian/changelog.template install/debian/conffiles.template install/debian/control.template install/debian/postinst install/debian/postrm install/debian/preinst install/debian/prerm FORCE_DO_CMD
	$(call do_cmd,build_install_gyp_linux_package_deb_target_deb_package_beta)

all_deps += $(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb
action_build_install_gyp_linux_package_deb_target_deb_package_beta_outputs := $(builddir)/mod-spdy-beta_0.9.4.1-r407_amd64.deb


DEFS_Debug := \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	 \
	-pthread \
	-fno-exceptions \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-fno-strict-aliasing \
	-Wno-deprecated \
	-Wno-format \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Debug := \
	-Ithird_party/chromium/src

DEFS_Release := \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	 \
	-pthread \
	-fno-exceptions \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-fno-strict-aliasing \
	-Wno-deprecated \
	-Wno-format \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Release := \
	-Ithird_party/chromium/src

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libmod_spdy.so $(obj).target/build/linux_installer_configs.stamp

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action_build_install_gyp_linux_package_deb_target_deb_package_beta_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).target/build/linux_package_deb.stamp: | $(action_build_install_gyp_linux_package_deb_target_deb_package_beta_outputs)

# Preserve order dependency of special output on deps.
$(action_build_install_gyp_linux_package_deb_target_deb_package_beta_outputs): | $(builddir)/libmod_spdy.so $(obj).target/build/linux_installer_configs.stamp

$(obj).target/build/linux_package_deb.stamp: TOOLSET := $(TOOLSET)
$(obj).target/build/linux_package_deb.stamp: $(builddir)/libmod_spdy.so $(obj).target/build/linux_installer_configs.stamp FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/build/linux_package_deb.stamp
# Add target alias
.PHONY: linux_package_deb
linux_package_deb: $(obj).target/build/linux_package_deb.stamp

